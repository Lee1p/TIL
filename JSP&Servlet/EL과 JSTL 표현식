JSP EL (Expression Language) 표현식 언어

1. EL은 ${} 문법을 사용하여 데이터를 쉽게 출력할 수 있음.
- 평범한 출력문이 아니라(아무값이나 출력하는 용도가 아니다.)
  내장 객체의 컬렉션값을 출력하는 전용 출력문이다!!
  (pageContext, request, session, application)

  내장 객체 - 키가 중복되면 EL은 영역이 작은 객체부터 우선한다.
  pageContext < request < session < application

ex)
<% pageContext.setAttribute("test", 20);
request.setAttribute("test", 40);
%>

<div> test: ${test}</div>
<div> test: ${test}</div>

EL 표현식으로 출력할때 pageContext 가 생명주기가 짧으므로 둘 다 20을 출력

<div> test: ${test}</div>
<div> test: ${request.test}</div> // 요래 출력해야 40이 나온다. 잘안씀

   

코드 가독성 향상 
- Java 코드와 HTML 코드를 완전 분리하자

2. 간편한 문법
  EL을 사용하면 기존의 스크립틀릿(Java 코드)을 대체할 수 있어 더 직관적이고 간결한 코드 작성이 가능
3. 보안 강화
- null 처리 등

4. 코드 재사용 향상


JSTL(JSP Standard Tag Library)은 JSP에서 자주 사용하는 기능
(조건문, 반복문, 출력 등)을 표준 태그로 제공하는 라이브러리



JSTL
- 프로그래밍 기능이 구현된 태그
- 자바의 제어 > 대신하기 위한 역할


JSTL 선언 방법

라이브러리 가져와야하니까 구글에 maven repository 검색 

maven repository 들어가서 JSTL 검색 후 2번째  1.2 버전에서 jar 파일 다운로드 
WEB-INF -> lib에 jstl- 1.2 jar 붙여넣기 

그리고 지시자를 선언해야함 .
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

JSTL 변수 선언 방법 
<c:set var="c" value="30"/>
JSTL 변수는 pageContext 내장 객체의 컬렉션 값이다. 기본적으로 page 범위(pageScope)에 저장됨.

JSTL은 항 EL이랑 같이 사용한다 .

 단순 조건문 (c:if)

   ex)
   <c:set var="age" value="25"/>
   <c:if test="${age >= 20}">
   <p>성인입니다.</p>
   </c:if>
     
<h2>2번째 조건문(case end랑 비슷함. 다중 if문)</h2>
	<c:choose>
	   <c:when test="${num > 0}" > 양수 </c:when>
	   <c:when test="${num < 0}" > 음수 </c:when>
	   <c:otherwise>영</c:otherwise>
	</c:choose>

  <h2>반복문(일반 for + 향상된 for)</h2>
	
	<c:forEach var="i" begin="1" end="9" step="1">
	   <div>숫자: ${i}</div>
	</c:forEach>
	
